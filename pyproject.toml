[project]
name = "ai_roundtable"
version = "0.5.0"
description = "Discuss with multiple AIs"
requires-python = ">=3.13"
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["ai_roundtable"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
]
dependencies = [
    "pyyaml==6.0.2",
    "openai-agents==0.2.6",
]

[project.urls]
repository = "https://github.com/berquerant/ai-roundtable"

[project.scripts]
ai_roundtable = "ai_roundtable.cli:main"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.0",
    "pytest>=8.4.0",
    "ruff>=0.11.13",
    "setuptools",
    "tox>=4.26.0",
    "types-pyyaml",
]

[tool.uv]
package = true
dev-dependencies = [
    "setuptools",
    "types-pyyaml",
]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"

[tool.setuptools.packages.find]
exclude = ["build", "tests"]

[tool.ruff]
exclude = [
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".mypy_cache",
  ".pytype",
  ".ruff_cache",
  ".tox",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  ".ropeproject",
  ".pytest_cache",
  "__pycache__",
  ".coverage",
]
line-length = 120

[tool.ruff.lint]
select = [
  "F", # pyflakes
  "I", # isort
  "E", # pycodestyle
  "D", # pydocstyle
  "W", # pycodestyle
]
ignore = [
  "D100",  # Missing docstring in public module
  "D101",  # Missing docstring in public class
  "D102",  # Missing docstring in public method
  "D107",  # Missing docstring in __init__
  "D203",  # 1 blank line required before class docstring
  "D212",  # Multi-line docstring summary should start at the first line
  "I001",  # Import block is un-sorted or un-formatted
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401",  # Module imported but unused
]
"**/{tests,doc}/*" = ["D"]

[tool.mypy]
ignore_missing_imports = true
show_error_context = true
show_column_numbers = true
pretty = true

[tool.black]
line-length = 120

[tool.tox]
requires = ["tox>=4"]
env_list = [
  "black",
  "ruff",
  "mypy",
  "py313",
]
skipsdist = true
skip_missing_interpreters = true

[tool.tox.env_run_base]
labels = ["test","ci"]
deps = ["uv"]
commands = [[
  "uv", "run", "pytest", "--basetemp={envtmpdir}", "-s", "-v", "--ff", "--doctest-modules", "tests", "ai_roundtable",
]]

[tool.tox.env.black]
labels = ["check","ci"]
deps = ["uv"]
commands = [[
  "uv", "run", "black", "--check", "--diff", "--color", "tests", "ai_roundtable",
]]

[tool.tox.env.mypy]
labels = ["check","ci"]
deps = ["uv"]
commands = [[
  "uv", "run", "mypy", "--strict", "ai_roundtable",
]]

[tool.tox.env.ruff]
labels = ["check","ci"]
deps = ["uv"]
commands = [[
  "uv", "run", "ruff", "check", "tests", "ai_roundtable",
]]